#!/usr/bin/env node

const program = require('commander');
const Wallet = require('../lib/wallet');
const promptly = require('promptly');

program
  .version(require('../package.json').version)
  .option('--path <path>', 'REQUIRED - Where wallet is stored')
  .option(
    '--addresses <addresses>',
    'REQUIRED - Address of receiver, or json array [{address: abc1234, satoshis: xxxxx}]'
  )
  .option('--amount <amount>', 'REQUIRED - Value to transfer')
  .option('--fee <fee>', 'REQUIRED - The transaction fee to pay')
  .option('--utxos <utxos>', 'REQUIRED - Unspent transactions that can be spent')
  .option('--change <change>', 'REQUIRED - Change addresses')
  .parse(process.argv);

const main = async () => {
  const { path } = program;
  let wallet;
  try {
    const { addresses, amount, utxos, change, fee } = program;
    wallet = await Wallet.loadWallet({ path });
    if (utxos) {
      const password = await promptly.password('Wallet Password:');
      wallet = await wallet.unlock(password);
    }
    let params = { addresses, amount, utxos, change, fee };
    params.addresses = addresses.includes('[') ? JSON.parse(addresses) : addresses;
    params.utxos = params.utxos ? JSON.parse(params.utxos) : [];
    const tx = await wallet.newTx(params);
    console.log(tx.uncheckedSerialize());
  } catch (e) {
    console.error(e);
  }
};

main();
